//starting mongodb
    service start mongod

//moving to a dbs
    use <db_name>

// Adding Documents
        //insert one
    db.books.insertOne({title: "River and Source", author: "margaret ogolla", genres: ["Teaching","Guiding"], pages: 200, rating : 5})

        //insert many
    db.books.insertMany([{title:"mstahiki meya", author: "writter", pages: 200, rating: 8, genres: ["kiswahili","shairi"]},{title:"damu nyeusi", author: "mwandishi", pages: 210, rating: 9, genres: ["kelele","noise"]}])

//Finding documents
    db.books.find({pages: 200})

    db.books.find({pages: 200, author: "margaret ogolla"}) //AND

    //specifying what fields we want
    db.books.find({pages: 200}, {title: 1, author: 1}) // we want title and author fieldsonly

    db.books.find({}, {title: 1, author: 1}) // all books but dispaly only title and author fields

    //Find one by ID
    db.books.findOne({_id: ObjectId("62723ae017a8ce030584d0af")})


//sorting and limiting
    //counting
    db.books.find({rating: 5}).count()

    //limit
    db.books.find().limit(3)

    //sorting
    db.books.find().sort({rating: 1}) // 1 for ascending and -1 for descending

    //chaining them

    db.books.find().sort({rating: -1}).limit(5).count()

//Nested Documents
    {    
        "title": "Abu Books",  
        "author": "Abu",  
        "pages": 100,  
        "genres": ["movies","art"],  
        "rating": 10,
        "stock":{
            "count": 21,
            "price": 2000

        },
        "reviews":[
            {"name":"Great Read", "body":"Lorem ipsum"},
            {"name":"reviewer","body":"pure bliss"}
        ]
    }

    db.newBooks.insertMany(
        {"title": "Ben Books","author": "Ben","pages": 100,"genres": ["tales","fakiti"],"rating": 8,"stock":{"count": 19,"price": 2000},"reviews":[{"name":"reviewee","body":"his reviews"},{"name":"reviewer","body":"her reviews"}]},
        {"title": "Abu Books","author": "Abu","pages": 100,"genres": ["movies","art"],"rating":5,"stock":{"count":22,"price":2300},"reviews":[{"name":"reviewee","body":"her reviews"},{"name":"reviewer","body":"his reviews"}]}
        )


//operators

    //greater than
    db.books.find({rating: {$gt: 7}})

    //less than
    db.books.find({rating: {$lt: 7}})

    //less than or equal to
    db.books.find({rating: {$lte: 7}})

   // rating > 7 and pages > 200 - AND
    db.books.find({rating: {$gt: 7}, pages: {$gt: 200}})

    // rating > 7 or pages > 100 - OR
    db.books.find({$or: [{rating: {$gt: 7}}, {pages: {$gt: 200}}]})

//$in and $nin
    //find all the books that the ratings are in the range 7-9
    db.books.find({rating: {$in: [7,8,9]}})

    //find all the books that the ratings are not in the range 
    db.books.find({rating: {$nin: [8,9,10]}})

//Querying Arrays
    //results include books with music genres and other genres
    db.books.find({genres: "music"}) 

    //find books with music genre only
    db.books.find({genres: ["music"]})

    //find books with music and guiding
    db.books.find({genres: ["music","Guiding"]})

    //find all books with music and guiding even if it has more genre arrays
    db.books.find({genres: {$all: ["music","Guiding"] }})

//querying docs based on nested docs(other objects)
    //find all new books with reviews from 'reviewee'
    db.newBooks.find({"reviews.name":"reviewee"})

//Deleting documents
    //Delete One
    db.books.deleteOne({_id: ObjectId("62723c5517a8ce030584d0b2")})

    //Delete many
    db.books.deleteMany({pages: 200})

//update documents
    //update one
    db.books.updateOne({_id:ObjectId("626ea454afb4885a37dcf335")}, {$set: {pages: 150, rating: 9}})

    //update many
    db.books.updateMany({rating: 9}, {$set: {pages: 250}})

    //increment operators -- increment by 2
    db.books.updateOne({_id: ObjectId("626ea3deafb4885a37dcf334")}, {$inc: {pages: 2}})

    // decrement operators
    db.books.updateOne({_id: ObjectId("626ea3deafb4885a37dcf334")}, {$inc: {pages: -2}})

    // remove an item from an array in a document
    db.books.updateOne({_id:ObjectId("626ea454afb4885a37dcf335"),}, {$pull: {genres: "movies"}})
    
    // add an item to an array in a document
    db.books.updateOne({_id:ObjectId("626ea454afb4885a37dcf335"),}, {$push: {genres: "movies"}})

    //add several items to an array
    db.books.updateOne({_id:ObjectId("626ea454afb4885a37dcf335"),}, {$push: {genres: {$each: ["one", "two"]}}})
